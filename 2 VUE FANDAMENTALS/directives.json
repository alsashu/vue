{
  "binding": [
    {
      "directive": "v-bind",
      "description": "Binds a value to an HTML attribute or component prop (shorthand: ':')"
    },
    {
      "directive": "v-model",
      "description": "Creates two-way data binding on form inputs and components"
    }
  ],
  "conditional": [
    {
      "directive": "v-if",
      "description": "Conditionally renders an element based on a true/false condition"
    },
    {
      "directive": "v-else-if",
      "description": "Specifies an 'else if' block for v-if"
    },
    {
      "directive": "v-else",
      "description": "Specifies an 'else' block for v-if"
    },
    {
      "directive": "v-show",
      "description": "Toggle visibility of element using CSS (display: none)"
    }
  ],
  "listRendering": [
    {
      "directive": "v-for",
      "description": "Render a list by iterating over an array or object"
    }
  ],
  "eventHandling": [
    {
      "directive": "v-on",
      "description": "Attach event listeners (shorthand: '@')"
    }
  ],
  "templateControl": [
    {
      "directive": "v-slot",
      "description": "Define named slots in child components (shorthand: '#')"
    },
    {
      "directive": "v-pre",
      "description": "Skip compilation for this element and all its children"
    },
    {
      "directive": "v-cloak",
      "description": "Prevent flash of uncompiled content until Vue is ready"
    },
    {
      "directive": "v-once",
      "description": "Render the element only once and skip future updates"
    }
  ],
  "customDirectiveExample": {
    "name": "v-focus",
    "description": "Custom directive that auto-focuses an input element",
    "usage": "<input v-focus />",
    "definition": "app.directive('focus', { mounted(el) { el.focus(); } });"
  },
  "shorthands": [
    {
      "shorthand": ":",
      "equivalent": "v-bind"
    },
    {
      "shorthand": "@",
      "equivalent": "v-on"
    },
    {
      "shorthand": "#",
      "equivalent": "v-slot"
    }
  ]
}
